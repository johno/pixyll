theme_economist()
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 7) +
theme_economist()
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 7) +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases", linetype="d") + # Change name of x/y axis
theme_economist()
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 7) +
ggtitle("How far in advance are people booking? - Analysis for Rochester Pedal Tours") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases", linetype="d") + # Change name of x/y axis
theme_economist()
ggplot(data, aes(Weeks.Delta)) +
geom_density() +
geom_histogram(binwidth = 7) +
ggtitle("How far in advance are people booking? - Analysis for Rochester Pedal Tours") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases", linetype="d") + # Change name of x/y axis
theme_economist()
ggplot(data, aes(Weeks.Delta)) +
geom_density() +
geom_histogram(binwidth = 7) +
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
theme_economist()
ggplot(data, aes(Weeks.Delta)) +
geom_density() +
geom_histogram(binwidth = 7, aes(y=..density..) +
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
geom_density(alpha=.2, fill="#FF6666") + # Overlay with transparent density plot
theme_economist()
ggplot(data, aes(Weeks.Delta)) +
geom_density() +
geom_histogram(aes(y=..density..),
binwidth = 7)
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
geom_density(alpha=.2, fill="#FF6666") + # Overlay with transparent density plot
theme_economist()
ggplot(data, aes(Weeks.Delta)) +
geom_density() +
geom_histogram(binwidth = 7)
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
geom_density(alpha=.2, fill="#FF6666") + # Overlay with transparent density plot
theme_economist()
ggplot(data, aes(Weeks.Delta)) +
geom_density() +
geom_histogram(binwidth = 7)
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
theme_economist()
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 7) +
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
theme_economist()
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 7) +
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
theme_economist() +
geom_vline(aes(xintercept=mean(rating, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 7) +
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
theme_economist() +
geom_vline(aes(xintercept=mean(Weeks.Delta, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 7) +
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
theme_economist() +
geom_vline(aes(xintercept=mean(Weeks.Delta, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1) +
scale_x_continuous(breaks = round(seq(min(dat$x), max(dat$x), by = 0.5),1))
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 7) +
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
theme_economist() +
geom_vline(aes(xintercept=mean(Weeks.Delta, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1) +
scale_x_continuous(breaks = round(seq(min(data$Weeks.Delta)), max(data$Weeks.Delta)), by = 0.5),1))
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 7) +
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
theme_economist() +
geom_vline(aes(xintercept=mean(Weeks.Delta, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1) +
scale_x_continuous(breaks=number_ticks(10))
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 7) +
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
theme_economist() +
geom_vline(aes(xintercept=mean(Weeks.Delta, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1) +
scale_x_continuous(breaks=number_ticks(50))
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 7) +
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
theme_economist() +
geom_vline(aes(xintercept=mean(Weeks.Delta, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1) +
scale_x_continuous(breaks=number_ticks(50)) +
scale_y_continuous(breaks=number_ticks(50))
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 7) +
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
theme_economist() +
geom_vline(aes(xintercept=mean(Weeks.Delta, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1) +
scale_x_continuous(breaks=number_ticks(50)) +
scale_y_continuous(breaks=number_ticks(50))
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 10) +
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
theme_economist() +
geom_vline(aes(xintercept=mean(Weeks.Delta, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
library(ggplot2)
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 10) +
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
geom_vline(aes(xintercept=mean(Weeks.Delta, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 1) +
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
geom_vline(aes(xintercept=mean(Weeks.Delta, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
data <- data[-740, 46, 47]
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 1) +
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
geom_vline(aes(xintercept=mean(Weeks.Delta, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
setwd("/Users/ChrisStroud/Dropbox/R")
data <- read.csv("data.csv")
data <- data[-740, 46, 47]
data <- read.csv("data.csv")
data <- data[-740,46, 47,]
data <- data[-740,46, 47,]
View(data)
data <- data[-740,-46, -47,]
data <- data[-740,]
data <- data[-740,]
data <- data[-46,]
data <- data[-47,]
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 10) +
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
geom_vline(aes(xintercept=mean(Weeks.Delta, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
View(data)
data <- data[-47,]
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 1) +
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
geom_vline(aes(xintercept=mean(Weeks.Delta, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
View(data)
data <- data[-740,]
data <- data[-46,]
data <- data[-47,]
data <- read.csv("data.csv")
data <- data[-740,]
data <- data[-46,]
data <- data[-47,]
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 1) +
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
geom_vline(aes(xintercept=mean(Weeks.Delta, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
data <- read.csv("data.csv")
data <- data[-740,]
View(data)
data <- read.csv("data.csv")
data <- data[-740,]
data <- data[-46,]
data <- data[-47,]
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 1) +
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
geom_vline(aes(xintercept=mean(Weeks.Delta, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 1) +
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
coord_cartesian(xlim = c(-1, 40)) +
geom_vline(aes(xintercept=mean(Weeks.Delta, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 1) +
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
coord_cartesian(xlim = c(-1, 40)) +
theme_economist()
geom_vline(aes(xintercept=mean(Weeks.Delta, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 1) +
ggtitle("How far in advance are people booking? ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
coord_cartesian(xlim = c(-1, 40)) +
theme_economist() +
geom_vline(aes(xintercept=mean(Weeks.Delta, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
ggplot(data, aes(Weeks.Delta)) +
geom_histogram(binwidth = 1) +
ggtitle("How far in advance are people booking? - Rochest Pedal ") +
labs(x="Number of Weeks Between Purchase and Arrival", y="Number of Purchases") +
coord_cartesian(xlim = c(-1, 40)) +
theme_economist() +
geom_vline(aes(xintercept=mean(Weeks.Delta, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
summary(data)
install.packages("Hmisc")
library(Hmisc)
describe(mydata)
describe(data$Weeks.Delta)
# Required libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(tidytext)
library(janeaustenr)
# From section 5.1: Tokenizing by n-gram
austen_bigrams <- austen_books() %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2)
# From section 5.1.1: Counting and filtering n-grams
bigrams_separated <- austen_bigrams %>%
separate(bigram, c("word1", "word2"), sep = " ")
# From section 5.1.3: Using bigrams to provide context in sentiment analysis
AFINN <- get_sentiments("afinn")
negation_words <- c("not", "no", "never", "without")
negated_words <- bigrams_separated %>%
filter(word1 %in% negation_words) %>%
inner_join(AFINN, by = c(word2 = "word")) %>%
count(word1, word2, score, sort = TRUE) %>%
ungroup()
# Create plot
negated_words %>%
mutate(contribution = n * score) %>%
mutate(word2 = reorder(word2, contribution)) %>%
group_by(word1) %>%
top_n(10, abs(contribution)) %>%
ggplot(aes(word2, contribution, fill = n * score > 0)) +
geom_bar(stat = "identity", show.legend = FALSE) +
facet_wrap(~ word1, scales = "free") +
xlab("Words preceded by negation") +
ylab("Sentiment score * # of occurrences") +
theme_bw() +
coord_flip()
library('rpart')
load('GCDData.RData')
model <- rpart(Good.Loan ~
Duration.in.month +
Installment.rate.in.percentage.of.disposable.income +
Credit.amount  +
Other.installment.plans,
data=d,
control=rpart.control(maxdepth=4),
method="class")
library(MASS)
library(ISLR)
names(Boston)
library("tidyverse")
library(ggplot2)
library("ggthemes")
library(factoextra)
library(cluster)
library(NbClust)
####
# Data from: http://insideairbnb.com/get-the-data.html
# File name: data.csv
setwd("/Users//ChrisStroud/Documents/data-science/R/Projects/Airbnb-sf/")
df <- read.csv("data.csv")
####
###
# Munge
# Selecting data for analysis
dfscore <- df %>%
select(neighbourhood_cleansed,
review_scores_accuracy,
review_scores_cleanliness,
review_scores_checkin,
review_scores_communication,
review_scores_location,
review_scores_value)  %>%
na.omit()
# Rename columns
names(dfscore) <- c("hood","accuracy","cleanliness", "checkin", "communication","location", "value")
# Calculate average scores by neighborhood
dfscore <- dfscore %>%
group_by(hood) %>%
summarise(
accuracy = mean(accuracy),
cleanliness = mean(cleanliness),
checkin = mean(checkin),
communication = mean(communication),
location = mean(location),
value = mean(value)
)
# Create row names
rownames(dfscore) <- dfscore$hood
# Remove hood column
dfscore$hood <- NULL
###
nb <- NbClust(dfscore, distance = "euclidean", min.nc = 2,
max.nc = 10, method = "complete", index ="alllong")
p <- fviz_nbclust(nb)
p +
theme_minimal() +
scale_colour_solarized("red") +
labs(
title = "How many clusters should we use? ")
set.seed(123)
km.res <- kmeans(dfscore, 4, nstart = 25)
print(km.res)
fviz_cluster(km.res,
data = dfscore,
repel = TRUE) +   theme_minimal()
install.packages("ggproto")
set.seed(123)
km.res <- kmeans(dfscore, 4, nstart = 25)
print(km.res)
fviz_cluster(km.res,
data = dfscore,
repel = TRUE) +   theme_minimal()
km.res <- kmeans(dfscore, 4, nstart = 25)
print(km.res)
fviz_cluster(km.res,
data = dfscore)
p <- fviz_cluster(km.res,
data = dfscore)
p +
theme_minimal() +
scale_colour_solarized("red") +
labs(
title = "How many clusters should we use? ")
p +
theme_minimal() +
scale_colour_solarized("red") +
label.size = 3
labs(
title = "How many clusters should we use? ")
p +
theme_minimal() +
scale_colour_solarized("red") +
label.size = 30
labs(
title = "How many clusters should we use? ")
p +
theme_minimal(
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
) +
scale_colour_solarized("red") +
labs(
title = "How many clusters should we use? ")
p +
theme_minimal(
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
scale_colour_solarized("red") +
labs(
title = "How many clusters should we use? ")
p +
theme_minimal(
axis.text=element_text(size=12)) +
scale_colour_solarized("red") +
labs(
title = "How many clusters should we use? ")
p +
theme_minimal() +
scale_colour_solarized("red") +
labs(
title = "How many clusters should we use? ")
theme_minimal() +
labs(
title = "How many clusters should we use? ")
p +
theme_minimal() +
labs(
title = "How many clusters should we use? ")
set.seed(123)
km.res <- kmeans(dfscore, 2, nstart = 25)
print(km.res)
p <- fviz_cluster(km.res,
data = dfscore)
p +
theme_minimal() +
labs(
title = "How many clusters should we use? ")
p +
vertex.size=4,
theme_minimal() +
labs(
title = "What do the clusters look like? ")
p +
theme_minimal() +
labs(
title = "What do the clusters look like? ")
p +
theme_minimal() +
geom_text() +
labs(
title = "What do the clusters look like? ")
p +
theme_minimal() +
geom_text(size=10) +
labs(
title = "What do the clusters look like? ")
p +
theme_minimal() +
geom_text(size=20) +
labs(
title = "What do the clusters look like? ")
head(p)
pam.res <- pam(dfscore, 2)
pam.res$cluster
p <- fviz_cluster(pam.res,
data = dfscore)
p +
theme_minimal() +
geom_text(size=20) +
labs(
title = "What do the clusters look like? ")
clusplot(pam.res, main = "Cluster plot, k = 4",
color = TRUE)
p.pam +
theme_minimal() +
geom_text(size=20) +
labs(
title = "What do the clusters look like? ")
p.pam <- fviz_cluster(pam.res,
data = dfscore)
p.pam +
theme_minimal() +
geom_text(size=20) +
labs(
title = "What do the clusters look like? ")
plot(silhouette(pam.res),  col = 2:5)
plot(silhouette(pam.res),  col = 2:5)
fviz_silhouette(silhouette(pam.res))
fviz_cluster(pam.res, frame.type = "t")
library("tidyverse")
library(ggplot2)
library("ggthemes")
library(factoextra)
library(cluster)
library(NbClust)
####
# Data from: http://insideairbnb.com/get-the-data.html
# File name: data.csv
setwd("/Users//ChrisStroud/Documents/data-science/R/Projects/Airbnb-sf/")
df <- read.csv("data.csv")
####
###
# Munge
# Selecting data for analysis
dfscore <- df %>%
select(neighbourhood_cleansed,
review_scores_accuracy,
review_scores_cleanliness,
review_scores_checkin,
review_scores_communication,
review_scores_location,
review_scores_value)  %>%
na.omit()
# Rename columns
names(dfscore) <- c("hood","accuracy","cleanliness", "checkin", "communication","location", "value")
# Calculate average scores by neighborhood
dfscore <- dfscore %>%
group_by(hood) %>%
summarise(
accuracy = mean(accuracy),
cleanliness = mean(cleanliness),
checkin = mean(checkin),
communication = mean(communication),
location = mean(location),
value = mean(value)
)
# Create row names
rownames(dfscore) <- dfscore$hood
# Remove hood column
dfscore$hood <- NULL
###
###
# Is there clusters?
# How many clusters is optimal?
nb <- NbClust(dfscore, distance = "euclidean", min.nc = 2,
max.nc = 10, method = "complete", index ="alllong")
p <- fviz_nbclust(nb)
